# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-10 12:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('stonedb', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30)),
                ('slug', models.SlugField(max_length=30, unique=True)),
                ('cc', models.CharField(default='xx', editable=False, max_length=2, unique=True)),
                ('geonameid', models.PositiveIntegerField(editable=False, unique=True)),
                ('phone', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30)),
                ('slug', models.SlugField(max_length=30, unique=True)),
                ('about', models.TextField(default='')),
                ('description', models.CharField(default='', max_length=255)),
                ('keywords', models.CharField(default='', max_length=255)),
                ('title_foto', models.CharField(default='', max_length=100)),
                ('count_members', models.PositiveSmallIntegerField(default=0)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Groups',
                'verbose_name': 'Group',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Pic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(choices=[('profile', 'Profile'), ('projects', 'Projects'), ('stones', 'Stones'), ('stock', 'Stock'), ('groups', 'Groups'), ('pages', 'Pages')], default='profile', max_length=20)),
                ('module_id', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('size', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=0)),
                ('height', models.PositiveIntegerField(default=0)),
                ('ext', models.CharField(default='jpg', max_length=3)),
                ('title', models.CharField(blank=True, default='', help_text='A short title for the picture.', max_length=80)),
                ('caption', models.TextField(blank=True, default='', help_text='Optionally, some more information about the picture.')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_sticky', models.BooleanField(default=False)),
                ('is_comments', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_title', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Pictures',
                'verbose_name': 'Picture',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30)),
                ('slug', models.SlugField(default='', max_length=30, unique=True)),
                ('about', models.TextField(default='')),
                ('description', models.CharField(default='', max_length=255)),
                ('title_foto', models.CharField(default='', max_length=100)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_recommended', models.BooleanField(default=False)),
                ('count_views', models.PositiveIntegerField(default=0, editable=False)),
                ('description', models.TextField(blank=True, default='', help_text='Describe the project, the challenges you met, the problems you solved, the time it took, etc.', verbose_name='Project description')),
                ('location', models.TextField(blank=True, default='', help_text='ONLY for publicly accessible buildings, provide a streetaddress of the project, where it can be visited.', verbose_name='Address')),
                ('lat', models.FloatField(default=None, editable=False, null=True)),
                ('lng', models.FloatField(default=None, editable=False, null=True)),
                ('stones', models.ManyToManyField(help_text='Start typing the name of a stone used in the project, then select the stones from the list. Add all stones used in the project, but not more than ten.', to='stonedb.Stone', verbose_name='Stones used')),
            ],
            options={
                'verbose_name_plural': 'Projects',
                'verbose_name': 'Project',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_recommended', models.BooleanField(default=False)),
                ('count_views', models.PositiveIntegerField(default=0, editable=False)),
                ('description', models.TextField(blank=True, default='', help_text='Add any information about the stock item here, i.e. sizes, surface treatment, borders, etc.', verbose_name='Stock item description')),
                ('dim_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'not specified'), (1, 'blocks'), (2, 'slabs'), (3, 'tiles'), (4, 'cobblestone'), (9, 'other')], default=0, help_text='Specify the product type of of your stock item.', verbose_name='Product type')),
                ('dim_total', models.PositiveIntegerField(blank=True, default=0, help_text='Total amount in square meters or cubic meters.', verbose_name='Total amount')),
                ('stone', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='stonedb.Stone')),
            ],
            options={
                'verbose_name_plural': 'Stocks',
                'verbose_name': 'Stock',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(default='', help_text='The name of your company.', max_length=100, verbose_name='Company name')),
                ('contact', models.CharField(blank=True, default='', help_text='The name of your company.', max_length=100, verbose_name='Contact person')),
                ('contact_position', models.CharField(blank=True, default='', help_text='The job title of the contact person (sales, owner, etc.)', max_length=100, verbose_name='Contact position')),
                ('slogan', models.CharField(blank=True, default='', help_text='A very short sentence that expresses the company focus and values.', max_length=255, verbose_name='Company slogan')),
                ('street', models.CharField(blank=True, default='', help_text='The physical address of the company.', max_length=100, verbose_name='Street')),
                ('city', models.CharField(blank=True, default='', help_text='The name of the city or town.', max_length=100, verbose_name='City')),
                ('zip', models.CharField(blank=True, default='', help_text='The postal code.', max_length=16, verbose_name='Postal code')),
                ('country_sub_id', models.PositiveIntegerField(db_index=True, default=0)),
                ('country_old_id', models.PositiveIntegerField(db_index=True, default=0)),
                ('country_sub_name', models.CharField(blank=True, default='', help_text='The province or region if applicable.', max_length=100, verbose_name='Province/Region')),
                ('country_name', models.CharField(blank=True, default='', help_text='The country your company is registered.', max_length=100, verbose_name='Country name')),
                ('postal', models.TextField(default='', verbose_name='Postal address')),
                ('email', models.CharField(blank=True, default='', help_text='Official company sales email address.', max_length=100, verbose_name='E-mail')),
                ('fax', models.CharField(blank=True, default='', help_text="Your company's fax number.", max_length=100, verbose_name='Fax')),
                ('tel', models.CharField(blank=True, default='', help_text="Your company's phone number, including international dialing code for your country.", max_length=100, verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, default='', help_text='Your mobile phone number.', max_length=100, verbose_name='Mobile phone')),
                ('web', models.CharField(blank=True, default='', help_text='The official web site of your company, if applicable.', max_length=100, verbose_name='Company website')),
                ('about', models.TextField(blank=True, default='', help_text='Provide some background about your company', verbose_name='About company')),
                ('title_foto', models.IntegerField(default=0)),
                ('title_foto_ext', models.CharField(default='', max_length=30)),
                ('signup_ip', models.CharField(default='', max_length=15)),
                ('lastlogin_ip', models.CharField(default='', max_length=15)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, default=None, help_text='Country the company is located.', null=True, on_delete=django.db.models.deletion.CASCADE, to='companydb.Country', verbose_name='Country')),
            ],
            options={
                'verbose_name_plural': 'Profiles',
                'verbose_name': 'Profile',
            },
        ),
        migrations.AddField(
            model_name='stock',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='companies',
            field=models.ManyToManyField(related_name='products', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
    ]
